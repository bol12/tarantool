-- sql: assertion fault on VALUES #3888
--
-- Make sure that tokens representing values of integer, float,
-- and blob constants are different from tokens representing
-- keywords of the same names.
--
test_run = require('test_run').new()
---
...
engine = test_run:get_cfg('engine')
---
...
box.sql.execute('pragma sql_default_engine=\''..engine..'\'')
---
- rowcount: 0
...
-- check 'VALUES' against typedef keywords (should fail)
box.sql.execute('VALUES(blob)')
---
- error: 'Failed to execute SQL statement: near "blob": syntax error'
...
box.sql.execute('VALUES(float)')
---
- error: 'Failed to execute SQL statement: near "float": syntax error'
...
-- check 'SELECT' against typedef keywords (should fail)
box.sql.execute('SELECT blob')
---
- error: 'Failed to execute SQL statement: near "blob": syntax error'
...
box.sql.execute('SELECT float')
---
- error: 'Failed to execute SQL statement: near "float": syntax error'
...
-- check 'VALUES' against ID (should fail)
box.sql.execute('VALUES(TheColumnName)')
---
- error: 'Failed to execute SQL statement: no such column: THECOLUMNNAME'
...
-- check 'SELECT' against ID (should fail)
box.sql.execute('SELECT TheColumnName')
---
- error: 'Failed to execute SQL statement: no such column: THECOLUMNNAME'
...
-- check 'VALUES' well-formed expression  (returns value)
box.sql.execute('VALUES(-0.5e-2)')
---
- metadata:
  - name: column1
    type: NUMERIC
  rows:
  - [-0.005]
...
box.sql.execute('SELECT X\'507265766564\'')
---
- metadata:
  - name: X'507265766564'
    type: BLOB
  rows:
  - ['Preved']
...
-- check 'SELECT' well-formed expression  (return value)
box.sql.execute('SELECT 3.14')
---
- metadata:
  - name: '3.14'
    type: NUMERIC
  rows:
  - [3.14]
...
box.sql.execute('SELECT X\'4D6564766564\'')
---
- metadata:
  - name: X'4D6564766564'
    type: BLOB
  rows:
  - ['Medved']
...
